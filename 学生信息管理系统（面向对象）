'''
导入导出文件的编码是utf-8
'''
import os

class Students:    #定义了一个类，创建学生课程信息
    def __init__(self,no,name,yuwen=0,shuxue=0,yingyu=0):
        self.no = no
        self.name = name
        self.yuwen = int(yuwen)
        self.shuxue = int(shuxue)
        self.yingyu = int(yingyu)




class StudentsList:
    def __init__(self):
        self.stslist = []

    def show(self):
        #显示信息
        print('{}\t{}\t{}\t{}\t{}'
              .format('学号','姓名','语文','数学','英语'))
        for st in self.stslist:
            print('{}\t{}\t{}\t{}\t{}'
              .format(st.no,st.name,st.yuwen,st.shuxue,st.yingyu))
            
    def __enterScore(self,message):
        #各科分数输入
        while True:
            try:
                score = input(message)
                if 0 <= int(score) <= 150:
                    break
                else:
                    print("输入错误，应在0到150之间")
            except:
                print("输入错误，应在0到150之间")
        return score

    def __exists(self,no):
        #判断学号是否存在
        for st in self.stslist:
            if st.no == no:
                return True
        else:
            return False
    '''
    添加和删除信息
    '''
    def insert(self):
        #添加信息
        while True:
            no = input('学号:')
            if self.__exists(no):
                print('该学号已存在')
            else:
                name = input('姓名:')
                yuwen = self.__enterScore('语文:')
                shuxue = self.__enterScore('数学:')
                yingyu = self.__enterScore('英语:')
                st = Students(no,name,yuwen,shuxue,yingyu)
                self.stslist.append(st)
            choice = input('继续添加(y/n)?').lower()
            if choice == 'n':
                break


    def delete(self):
        #删除信息
        while True:
            no = input('请输入要删除的学生学号:')
            for st in self.stslist[:]:
                if st.no == no:
                    self.stslist.remove(st)
                    print('删除成功')
                    break
            else:
                print('该学号不存在')
            choice = input('继续删除(y/n)?').lower()
            if choice == 'n':
                break


    def update(self):
        #修改信息
        while True:
            no = input('请输入要修改的学生学号:')
            if self.__exists(no):
                for st in self.stslist:
                    if st.no == no:
                        st.name = input('名称:')
                        st.yuwen = int(self.__enterScore('语文:'))
                        st.shuxue = int(self.__enterScore('数学:'))
                        st.yingyu = int(self.__enterScore('英语:'))
                        print('修改成功')
                        break
            else:
                print('该学号不存在')
            choice = input('继续修改(y/n)?').lower()
            if choice == 'n':
                break

    def load(self,fn):
        #导入信息
        if os.path.exists(fn):
            try:
                with open(fn,'r',encoding = 'utf-8') as fp:
                    while True:
                        fs = fp.readline().strip('\n')
                        if not fs:
                            break
                        else:
                            st = Students(*fs.split(','))
                            if self.__exists(st.no):
                                print('该学号已存在')
                            else:
                                self.stslist.append(st)
                print('导入完毕')
            except:
                print('error...')
        else:
            print('要导入的文件不存在')
        

    def save(self,fn):
        #导出信息
        with open(fn,'w',encoding = 'utf-8') as fp:
            for st in self.stslist:
                fp.write(st.no + ',')
                fp.write(st.name + ',')
                fp.write(str(st.yuwen) + ',')
                fp.write(str(st.shuxue) + ',')
                fp.write(str(st.yingyu) + '\n')
            print("导出完毕")

    def score_avg(self):
        #求平均分
        length = len(self.stslist)
        if length > 0:
            yuwen_avg = sum([st.yuwen for st in self.stslist])/length
            shuxue_avg = sum([st.shuxue for st in self.stslist])/length
            yingyu_avg = sum([st.yingyu for st in self.stslist])/length
            print('语文平均分是:%.2f'%yuwen_avg)
            print('数学平均分是:%.2f'%shuxue_avg)
            print('英语平均分是:%.2f'%yingyu_avg)
        else:
            print('尚没有该学科...')

    def score_max(self):
        #求最高
        if len(self.stslist) > 0:
            yuwen_max = max([st.yuwen for st in self.stslist])
            shuxue_max = max([st.shuxue for st in self.stslist])
            yingyu_max = max([st.yingyu for st in self.stslist])
            print('语文最高分是:%d'%yuwen_max)
            print('数学最高分是:%d'%shuxue_max)
            print('英语最高分是:%d'%yingyu_max)
        else:
            print('尚没有该学科...')

    def score_min(self):
        #求最低
        if len(self.stslist) > 0:
            yuwen_min = min([st.yuwen for st in self.stslist])
            shuxue_min = min([st.shuxue for st in self.stslist])
            yingyu_min = min([st.yingyu for st in self.stslist])
            print('语文最低分是:%d'%yuwen_min)
            print('数学最低分是:%d'%shuxue_min)
            print('英语最低分是:%d'%yingyu_min)
        else:
            print('尚没有该学科...')

    '''
    三个导航显示，info,sale,main
    '''
    def infoprocess(self):
        #学生基本信息管理
        print('学生基本信息管理'.center(20,'-'))
        print('load----------导入学生信息')
        print('insert--------添加学生信息')
        print('delete--------删除学生信息')
        print('update--------修改学生信息')
        print('show----------显示学生信息')
        print('save----------导出学生信息')
        print('return--------返回')
        print('-'*28)
        while True:
            s = input('info>').strip().lower()
            if s == 'load':
                fn = input('请输入要导入的文件名:')
                self.load(fn)
            elif s == 'show':
                self.show()
            elif s == 'insert':
                self.insert()
            elif s == 'delete':
                self.delete()
            elif s == 'update':
                self.update()
            elif s == 'save':
                fn = input('请输入要导出的文件名:')
                self.save(fn)
            elif s =='return':
                break
            else:
                print('输入错误')
    
    def saleprocess(self):
        #学生各科分数统计
        print('学生各科分数统计'.center(24,'='))
        print('avg    --------平均分')
        print('max    --------最高分')
        print('min    --------最低分')
        print('return --------返回')
        print(''.center(30,'='))
        while True:
            s = input('score>').strip().lower()
            if s == 'avg':                
                self.score_avg()
            elif s == 'max':                
                self.score_max()
            elif s == 'min':                
                self.score_min()
            elif s == 'return':
                break
            else:
                print('输入错误')
                
    def main(self):
        #主控函数               
        while True:
            print('学生信息管理系统V1.0'.center(24,'*'))
            print('info  --------学生基本信息管理')
            print('score  --------学生各科分数统计')
            print('exit  --------退出系统')
            print(''.center(32,'='))
            s = input('main>').strip().lower()
            if s == 'info':
                self.infoprocess()
            elif s == 'score':
                self.saleprocess()
            elif s == 'exit':
                break
            else:
                print('输入错误')   
        

if __name__ == '__main__':
    sts = StudentsList()
    sts.main()

                
            

    
    
        
            
        
        

